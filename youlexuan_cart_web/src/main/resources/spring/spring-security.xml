<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
    <!-- 配置图标不拦截-->
    <http security="none" pattern="/favicon.ico"/>
    <http security="none" pattern="/css/**"/>
    <http security="none" pattern="/data/**"/>
    <http security="none" pattern="/fonts/**"/>
    <http security="none" pattern="/img/**"/>
    <http security="none" pattern="/js/**"/>
    <http security="none" pattern="/plugins/**"/>
    <http security="none" pattern="/cart.html"/>
    <!-- <http security="none" pattern="/cart/*.do"/>-->
    <!-- 自定义登录页面不拦截-->


    <http use-expressions="false" entry-point-ref="casProcessingFilterEntryPoint">
        <!-- 如果用户不登录，系统可以拦截到匿名用户登录名称 如果用户登录成功，就可以拦截正常用户名称-->
        <intercept-url pattern="/cart/*.do" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <!-- 拦截全部访问请求-->
        <!-- /index.html-->
        <!-- /demo/index.html-->
        <intercept-url pattern="/**" access="ROLE_ADMIN"/>
        <!-- 登录框-->
        <!--<form-login login-page="/login.html" authentication-failure-forward-url="/login_error.html" always-use-default-target="true" default-target-url="/index.html"/>-->
        <!-- 禁用CSRF-->
        <csrf disabled="true"/>
        <custom-filter ref="casAuthenticationFilter" position="CAS_FILTER"/>
        <custom-filter ref="requestSingleLogoutFilter" before="LOGOUT_FILTER"/>
        <custom-filter ref="singleLogoutFilter" before="CAS_FILTER"/>
    </http>
    <!-- CAS入口点 负责承接spring security的认证工作 -->
    <beans:bean id="casProcessingFilterEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
        <!-- 单点登录服务器登录URL -->
        <beans:property name="loginUrl" value="http://192.168.188.146:9100/cas/login"/>
        <beans:property name="serviceProperties" ref="serviceProperties"/>
    </beans:bean>
    <beans:bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
        <!--service 配置自身工程的根地址+/login/cas   -->
        <beans:property name="service" value="http://localhost:9108/login/cas"/>
    </beans:bean>
    <!-- CAS入口点 结束 -->

    <!-- 认证过滤器 开始 -->
    <beans:bean id="casAuthenticationFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
    </beans:bean>

    <!-- 认证管理器 -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="casAuthenticationProvider">

        </authentication-provider>
    </authentication-manager>

    <!-- 认证提供者 -->
    <beans:bean id="casAuthenticationProvider"     class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
        <!-- 授权、权限相关 转交给springSecurity来具体实现-->
        <beans:property name="authenticationUserDetailsService">
            <beans:bean class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
                <beans:constructor-arg ref="userDetailsService" />
            </beans:bean>
        </beans:property>
        <beans:property name="serviceProperties" ref="serviceProperties"/>
        <!-- 票据验证工作交给 cas Server 来实现ticketValidator 为票据验证器 -->
        <beans:property name="ticketValidator">
            <beans:bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
                <beans:constructor-arg index="0" value="http://192.168.188.146:9100/cas"/>
            </beans:bean>
        </beans:property>
        <beans:property name="key" value="an_id_for_this_auth_provider_only"/>
    </beans:bean>

    <!-- 认证类 -->
    <beans:bean id="userDetailsService" class="com.offcn.cart.service.UserDetailServerImpl"/>

    <!-- 单点登出  开始  -->
    <beans:bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter"/>
    <beans:bean id="requestSingleLogoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <beans:constructor-arg value="http://192.168.188.146:9100/cas/logout?service=http://localhost:9108/"/>
        <beans:constructor-arg>
            <beans:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
        </beans:constructor-arg>
        <beans:property name="filterProcessesUrl" value="/logout/cas"/>
    </beans:bean>
    <!-- 单点登出  结束 -->
</beans:beans>
